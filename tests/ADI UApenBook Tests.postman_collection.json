{
	"info": {
		"_postman_id": "b8b94529-8152-4665-982f-9a8fc3bcc6cc",
		"name": "ADI UApenBook Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18767598"
	},
	"item": [
		{
			"name": "Post Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.globals.set(\"token\", \"Bearer \" + jsonData.jwt);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"user1@ua\",\r\n    \"password\" : \"12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/login",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Todos Libros",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"    var jsonData = pm.response.json();\r",
							"pm.test(\"Contains Harry Potter 1: La academia\", function () {\r",
							"    pm.expect(jsonData.Libros[0].name).to.equal(\"Harry Potter 1: La academia\");\r",
							"});\r",
							"pm.test(\"Pages contains nextURL but not the prevURL\", function () {\r",
							"    pm.expect(jsonData.pages.nextURL).to.equal(\"/books?page=2&pageSize=4\");\r",
							"    pm.expect(jsonData.pages.prevURL).to.equal(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"idBuscado\", 1)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:3000/books?page=1&pageSize=4",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"idBuscado\", jsonData.id)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Nuevo libro\",\r\n    \"language\" : \"Ingles\",\r\n    \"year\" : \"1983\",\r\n    \"description\": \"Descripcion de un libro\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/books",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contains Nuevo libro\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.libro[0].name).to.equal(\"Nuevo libro\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/books/:id",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBuscado}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:3000/books/:id",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBuscado}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Libro no existente (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/books/:id",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBuscado}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Sin Authorization (403)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3000/books/:id",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBuscado}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Libro no existente (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:3000/books/:id",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBuscado}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get usuarios",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:3000/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get usuario con id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:3000/users/:id",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get usuario con id 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "localhost:3000/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Upload image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": "/C:/Users/Serg2/source/repos/API-UApenBook-ADI/index.js"
						}
					]
				},
				"url": {
					"raw": "localhost:3000/single",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"single"
					]
				}
			},
			"response": []
		}
	]
}